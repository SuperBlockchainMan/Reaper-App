{"version":3,"sources":["components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","views/Home/components/IconCard.tsx","views/Home/components/MetricsSection/StatCardContent.tsx","views/Home/components/MetricsSection/index.tsx","hooks/api.ts","views/Home/index.tsx"],"names":["sharedStyles","theme","clipPath","clipFill","css","isDark","dark","light","colors","background","ConcaveContainer","styled","Box","ConvexContainer","ConvexTop","width","height","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","Wrapper","div","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","Flex","getPadding","ChildrenWrapper","Container","mediaQueries","sm","lg","PageSection","children","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","props","StyledCard","Card","md","rotation","IconWrapper","IconCard","icon","borderColor","borderBackground","StatCardContent","headingText","bodyText","highlightColor","useMatchBreakpoints","isMobile","isTablet","isSmallerScreen","split","lastWord","pop","remainingWords","slice","length","join","minHeight","minWidth","flexDirection","justifyContent","mt","scale","color","mb","Stats","t","useTranslation","data","useState","setData","useEffect","a","fetch","response","json","responseData","console","error","fetchData","useGetStats","useTheme","tvlString","formatLocalisedCompactNumber","tvl","trades","users","alignItems","mr","secondary","primary","failure","Home","useWeb3React","account","Page","style","margin","MetricsSection"],"mappings":"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","file":"static/js/10.f64dc696.chunk.js","sourcesContent":["import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n","import React, { ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, Box, CardProps } from '@pancakeswap/uikit'\n\nconst StyledCard = styled(Card)<{ background: string; rotation?: string }>`\n  height: fit-content;\n  padding: 1px 1px 4px 1px;\n  box-sizing: border-box;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\n  }\n`\n\nconst IconWrapper = styled(Box)<{ rotation?: string }>`\n  position: absolute;\n  top: 24px;\n  right: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\n  }\n`\n\ninterface IconCardProps extends IconCardData, CardProps {\n  children: ReactNode\n}\n\nexport interface IconCardData {\n  icon?: ReactNode\n  background?: string\n  borderColor?: string\n  rotation?: string\n}\n\nconst IconCard: React.FC<IconCardProps> = ({ icon, background, borderColor, rotation, children, ...props }) => {\n  return (\n    <StyledCard background={background} borderBackground={borderColor} rotation={rotation} {...props}>\n      <CardBody>\n        {icon && <IconWrapper rotation={rotation}>{icon}</IconWrapper>}\n        {children}\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default IconCard\n","import React from 'react'\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\n\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ({\n  headingText,\n  bodyText,\n  highlightColor,\n}) => {\n  const { isMobile, isTablet } = useMatchBreakpoints()\n  const isSmallerScreen = isMobile || isTablet\n  const split = headingText.split(' ')\n  const lastWord = split.pop()\n  const remainingWords = split.slice(0, split.length).join(' ')\n\n  return (\n    <Flex\n      minHeight={[null, null, null, '168px']}\n      minWidth=\"232px\"\n      width=\"fit-content\"\n      flexDirection=\"column\"\n      justifyContent=\"flex-end\"\n      mt={[null, null, null, '64px']}\n    >\n      {isSmallerScreen && remainingWords.length > 13 ? (\n        <Heading scale=\"lg\">{remainingWords}</Heading>\n      ) : (\n        <Heading scale=\"xl\">{remainingWords}</Heading>\n      )}\n      <Heading color={highlightColor} scale=\"xl\" mb=\"24px\">\n        {lastWord}\n      </Heading>\n      <Text color=\"textSubtle\">{bodyText}</Text>\n    </Flex>\n  )\n}\n\nexport default StatCardContent\n","import React from 'react'\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetStats } from 'hooks/api'\nimport useTheme from 'hooks/useTheme'\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\nimport IconCard, { IconCardData } from '../IconCard'\nimport StatCardContent from './StatCardContent'\nimport GradientLogo from '../GradientLogoSvg'\n\n// Values fetched from bitQuery effective 6/9/21\nconst txCount = 30841921\nconst addressCount = 2751624\n\nconst Stats = () => {\n  const { t } = useTranslation()\n  const data = useGetStats()\n  const { theme } = useTheme()\n\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\n  const trades = formatLocalisedCompactNumber(txCount)\n  const users = formatLocalisedCompactNumber(addressCount)\n\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: tvlString })\n  const [entrusting, inFunds] = tvlText.split(tvlString)\n\n  const UsersCardData: IconCardData = {\n    icon: <CommunityIcon color=\"secondary\" width=\"36px\" />,\n  }\n\n  const TradesCardData: IconCardData = {\n    icon: <SwapIcon color=\"primary\" width=\"36px\" />,\n  }\n\n  const StakedCardData: IconCardData = {\n    icon: <ChartIcon color=\"failure\" width=\"36px\" />,\n  }\n\n  return (\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\n      <Flex flexDirection={['column', null, null, 'row']} mb={[null, null, null, '32px']} >\n        <IconCard mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('%users% users', { users })}\n            bodyText={t('in the last 30 days')}\n            highlightColor={theme.colors.secondary}\n          />\n        </IconCard>\n        <IconCard mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('%trades% trades', { trades })}\n            bodyText={t('made in the last 30 days')}\n            highlightColor={theme.colors.primary}\n          />\n        </IconCard>\n        <IconCard mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('$%tvl% staked', { tvl: tvlString })}\n            bodyText={t('Total Value Locked')}\n            highlightColor={theme.colors.failure}\n          />\n        </IconCard>\n        <IconCard>\n          <StatCardContent\n            headingText={t('$%tvl% staked', { tvl: tvlString })}\n            bodyText={t('Total Value Locked')}\n            highlightColor={theme.colors.failure}\n          />\n        </IconCard>\n      </Flex>\n      <Flex flexDirection={['column', null, null, 'row']}>\n        <IconCard mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('%users% users', { users })}\n            bodyText={t('in the last 30 days')}\n            highlightColor={theme.colors.secondary}\n          />\n        </IconCard>\n        <IconCard mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('%trades% trades', { trades })}\n            bodyText={t('made in the last 30 days')}\n            highlightColor={theme.colors.primary}\n          />\n        </IconCard>\n        <IconCard mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\n          <StatCardContent\n            headingText={t('$%tvl% staked', { tvl: tvlString })}\n            bodyText={t('Total Value Locked')}\n            highlightColor={theme.colors.failure}\n          />\n        </IconCard>\n        <IconCard>\n          <StatCardContent\n            headingText={t('$%tvl% staked', { tvl: tvlString })}\n            bodyText={t('Total Value Locked')}\n            highlightColor={theme.colors.failure}\n          />\n        </IconCard>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Stats\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  id: string\n  chain: string\n  name: string\n  site_url: string\n  logo_url: string\n  has_supported_portfolio: boolean\n  tvl: number\n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport PageSection from 'components/PageSection'\nimport { useWeb3React } from '@web3-react/core'\nimport useTheme from 'hooks/useTheme'\nimport Container from 'components/Layout/Container'\nimport { PageMeta } from 'components/Layout/Page'\nimport Hero from './components/Hero'\nimport { swapSectionData, earnSectionData, cakeSectionData } from './components/SalesSection/data'\nimport MetricsSection from './components/MetricsSection'\nimport FarmsPoolsRow from './components/FarmsPoolsRow'\nimport Footer from './components/Footer'\nimport CakeDataRow from './components/CakeDataRow'\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\nimport UserBanner from './components/UserBanner'\n\nconst UserBannerWrapper = styled(Container)`\n  z-index: 1;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 50%;\n  transform: translate(-50%, 0);\n  padding-left: 0px;\n  padding-right: 0px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nconst Home: React.FC = () => {\n  const { theme } = useTheme()\n  const { account } = useWeb3React()\n\n  return (\n    <>\n      <PageMeta />\n      <PageSection\n        innerProps={{ style: { margin: '0', width: '100%' } }}\n        background={\n          theme.isDark\n            ? 'linear-gradient(180deg, #09070C 22%, #201335 100%)'\n            : 'linear-gradient(180deg, #FFFFFF 22%, #D7CAEC 100%)'\n        }\n        index={2}\n        hasCurvedDivider={false}\n      >\n        <MetricsSection />\n      </PageSection>\n    </>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}